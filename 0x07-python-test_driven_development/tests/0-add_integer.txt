# # ./tests/0-add_integer.txt by haruma
_________________________________________________________________________

prototype : add_integer(a, b=98)
_________________________________________________________________________

-------------------------------------------------------------------------

________________________ import the function ____________________________


    >>> add_integer = __import__('0-add_integer').add_integer

-------------------------------------------------------------------------
Testing function with two natural numbers (intgers)

==

    >>> add_integer(1, 2)
    3

==


-------------------------------------------------------------------------
Testing function with one arrgument

==

    >>> add_integer(2)
    100

==


-------------------------------------------------------------------------
Testing function with one positive integer and one negative integer 

==

    >>> add_integer(1, -3)
    -2

==


-------------------------------------------------------------------------
Testing function with negative integer and postive integer

==

    >>> add_integer(-1, 3)
    2

==


-------------------------------------------------------------------------
Testing function with two negative intgers

==

    >>> add_integer(-1, -1)
    -2

==


-------------------------------------------------------------------------
Testing function with two floating numbers

==

    >>> add_integer(1.0, 1.0)
    2

==


-------------------------------------------------------------------------
Testing function with two floating numbers

==

    >>> add_integer(3.9, 1.1)
    4

==


-------------------------------------------------------------------------
Testing function with two floating numbers one negative and one positive

==

    >>> add_integer(-3.9, 2.1)
    -1

==


-------------------------------------------------------------------------
Testing function with two floating numbers one positive and one negative

==

    >>> add_integer(5.4, -1.4)
    4

==


-------------------------------------------------------------------------
Testing function with one floating number and one natural integer

==

    >>> add_integer(1.5, 4)
    5

==


-------------------------------------------------------------------------

Testing function with one character and one natural integer

==

    >>> add_integer("2", 4)
    Traceback (most recent call last):
    TypeError: a must be an integer

==


-------------------------------------------------------------------------

Testing function with one character and one natural integer

==

    >>> add_integer(2, "4")
    Traceback (most recent call last):
    TypeError: b must be an integer

==


-------------------------------------------------------------------------

Testing function with two characters

==

    >>> add_integer("2", "2")
    Traceback (most recent call last):
    TypeError: a must be an integer

==


-------------------------------------------------------------------------

Testing function with one character

==

    >>> add_integer("2")
    Traceback (most recent call last):
    TypeError: a must be an integer

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(2 + 2, 2 + 2)
    8

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(4 - 2, 4 - 2)
    4

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(2 * 2, 2 * 2)
    8

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(10 / 2, 10 / 2)
    10

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(10 / 2, 10 / 2)
    10

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(1 - 2, add_integer(1 - 2, 0))
    -2

==


-------------------------------------------------------------------------

Testing function with opirations

==

    >>> add_integer(1 - 2, add_integer(1 - 2, add_integer(add_integer(1, add_integer(0)), 1)))
    98

==


-------------------------------------------------------------------------

Testing function with None

==

    >>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

==


-------------------------------------------------------------------------

Testing function with None

==

    >>> add_integer(None, None)
	Traceback (most recent call last):
	TypeError: a must be an integer

==


-------------------------------------------------------------------------

Testing

==

    >>> add_integer(12, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

==


-------------------------------------------------------------------------

Testing

==

    >>> add_integer(19, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

==


-------------------------------------------------------------------------

Testing

==

    >>> type(add_integer(19, add_integer(19.21)))
    <class 'int'>

==


-------------------------------------------------------------------------

Testing

==

    >>> isinstance(add_integer(13, add_integer(13.21)), int)
    True

==


-------------------------------------------------------------------------

Testing

==

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

==


-------------------------------------------------------------------------

___________________________ END OF TESTS ________________________________